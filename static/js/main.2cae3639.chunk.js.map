{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","shoeAlert","toLowerCase","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2cae3639.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n          </li>\n          <li className=\"nav-item\">\n            {/* <Link className=\"nav-link\"to=\"/about\">About</Link> */}\n            <a className=\"nav-link\"href=\"#\">About</a>\n          </li>\n        </ul>\n        <form className=\"d-flex\" role=\"search\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\n        </form>\n        <div className={`form-check form-switch text-${props.mode==='light' ? 'dark': 'light'}`}>\n                <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\n                <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">enable dark mode</label>\n        </div>\n      </div>\n    </div>\n  </nav>\n  )\n}\nNavbar.propTypes={\n    title:PropTypes.string.isRequired,\n    abouttext:PropTypes.string\n}\n","import React,{useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick=()=>{\n        // console.log(\"uppercase was clicked\"+ text);\n        let newText=text.toUpperCase();\n        setText(newText);\n        props.shoeAlert(\"converted to uppercase\",\"success\");\n    }\n    const handletoclear=()=>{\n        // console.log(\"uppercase was clicked\"+ text);\n        let newText=(' ');\n        setText(newText);\n        props.shoeAlert(\"text cleared\",\"success\");\n    }\n    const handleLoClick=()=>{\n        // console.log(\"uppercase was clicked\"+ text);\n        let newText=text.toLowerCase();\n        setText(newText);\n        props.shoeAlert(\"converted to lowercase\",\"success\");\n    }\n    const handleOnChange=(event)=>{\n        // console.log(\"on change\");\n        setText(event.target.value);\n    }\n\n    const [text, setText] = useState('');\n    // text=\"new text\"; wrong way to change the state\n    //   setText(\"new text\");// wrong way to change the state\n  return (\n      <>\n    <div className=\"container\"style={{color:props.mode==='dark'?'grey':'#042743' }}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n             {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\n             <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange}rows=\"8\"style={{backgroundColor:props.mode==='dark'?'grey':'white', color: props.mode==='dark'? 'white':'#042743' }}></textarea>\n        </div>\n        <button className=\"btn btn-dark mx-0\" onClick={handleUpClick}>convert to uppercase</button>\n        <button className=\"btn btn-dark mx-2\" onClick={handleLoClick}>convert to lowercase</button>\n        <button className=\"btn btn-dark mx-2\" onClick={handletoclear}>clear text</button>\n    </div>\n    <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'dark' }}>\n        <h2>your text summary</h2>\n        <p>  {text.split(\" \").length} words and {text.length} characters</p>\n        <p>  {0.008*text.split(\" \").length} Minute read</p>\n        <h2>  preview</h2>\n        <p> {text.length>0 ?text:\"still learning more\"} </p>\n    </div>\n    </>\n  )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize=(word)=>{\n        const lower= word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\n\n    }\n  return (\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n    <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n  </div>\n  )\n}\n\nexport default Alert","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport React,{useState} from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\nconst [mode, setMode] =useState('light');\nconst [alert,setAlert] = useState(null);\nconst showAlert=(message,type)=>{\n  setAlert({\n    msg:message,\n    type:type\n  })\n   setTimeout(()=>{\n     setAlert(null);\n   },1500);\n}\nconst toggleMode=()=>{\n  if(mode==='light'){\n    setMode(\"dark\");\n    document.body.style.backgroundColor='#042743';\n    showAlert(\"dark mode has been enabled\",\"success\");\n    document.title='textutil-Dark mode'; \n    // setInterval(()=>{\n    //   document.title='textutil is amazing';\n    // },2000)\n    // setInterval(()=>{\n    //   document.title='install textutil now';\n    // },2000)\n  }else{\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"light mode has been enabled\",\"success\");\n    document.title='textutil-light mode';\n  }\n}\n  return (\n    <>\n {/* <Router> */}\n <Navbar title=\"Textutils\"mode={mode} toggleMode={toggleMode}/>\n <Alert alert={alert} />\n <div className=\"container my-3\">\n {/* <Routes>\n          <Route exact path=\"/about\"element={ <About />}>\n           \n          </Route>\n        <TextForm showAlert={showAlert} heading=\"enter the text to analyze below :\" mode={mode}/>\n          <Route exact path=\"/\"element=\n          {}>\n          </Route>\n </Routes> */}\n  <TextForm showAlert={showAlert} heading=\"enter the text to analyze below :\" mode={mode}/>\n  </div>\n  {/* </Router> */}\n \n\n</>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}