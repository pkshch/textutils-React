{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","aria-current","to","onClick","toggleMode","style","height","width","cursor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","value","onChange","event","target","rows","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","filter","element","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","About","myStyle","aria-labelledby","data-bs-parent","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","cls","document","body","classList","remove","console","log","add","components_Alert","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"4MAIe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAA1C,QAAAD,OAAqDL,EAAMM,OACzEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAKP,EAAMQ,OAC5CP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBK,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1Lb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMZ,UAAU,kBAAkBa,eAAa,OAAOC,GAAG,KAAzD,SAGFjB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMZ,UAAU,WAAUc,GAAG,UAA7B,WAIJjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0Be,QAAS,WAAKnB,EAAMoB,WAAW,YAAYC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAO,aAC9HvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBe,QAAS,WAAKnB,EAAMoB,WAAW,WAAWC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAO,aAC5HvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4Be,QAAS,WAAKnB,EAAMoB,WAAW,cAAcC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAO,aAClIvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBe,QAAS,WAAKnB,EAAMoB,WAAW,SAASC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAO,aACxHvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0Be,QAAS,WAAKnB,EAAMoB,WAAW,YAAYC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAO,aAC9HvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0Be,QAAS,WAAKnB,EAAMoB,WAAW,YAAYC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAO,aAC9HvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBe,QAAS,WAAKnB,EAAMoB,WAAW,UAAUC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAO,aAC1HvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBe,QAAS,WAAKnB,EAAMoB,WAAW,SAASC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAO,iBC7BnH,SAASC,EAASzB,GAC7B,IADoC0B,EAwBZC,mBAAS,IAxBGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAwB7BK,EAxB6BH,EAAA,GAwBvBI,EAxBuBJ,EAAA,GA2BtC,OACI3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+B,SAAA,KACFhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAWiB,MAAO,CAACa,MAAmB,SAAblC,EAAMM,KAAc,OAAO,YAC/DL,EAAAC,EAAAC,cAAA,UAAKH,EAAMmC,SACXlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEVH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAeW,GAAG,QAAQqB,MAAOL,EAAMM,SAd/C,SAACC,GAElBN,EAAQM,EAAMC,OAAOH,QAYoEI,KAAK,IAAGnB,MAAO,CAACoB,gBAA6B,SAAbzC,EAAMM,KAAc,UAAU,QAAS4B,MAAoB,SAAblC,EAAMM,KAAe,QAAQ,cAEpML,EAAAC,EAAAC,cAAA,UAASuC,SAAwB,IAAdX,EAAKY,OAAYvC,UAAU,yBAAyBe,QAlCvD,WAEhB,IAAIyB,EAAQb,EAAKc,cACjBb,EAAQY,GACR5C,EAAM8C,UAAU,yBAAyB,aA8BzC,wBACA7C,EAAAC,EAAAC,cAAA,UAAQuC,SAAwB,IAAdX,EAAKY,OAAYvC,UAAU,yBAAyBe,QAvBtD,WAEhB,IAAIyB,EAAQb,EAAKgB,cACjBf,EAAQY,GACR5C,EAAM8C,UAAU,yBAAyB,aAmBzC,wBACA7C,EAAAC,EAAAC,cAAA,UAAQuC,SAAwB,IAAdX,EAAKY,OAAYvC,UAAU,yBAAyBe,QA9BtD,WAGhBa,EADa,KAEbhC,EAAM8C,UAAU,eAAe,aA0B/B,eAEJ7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBiB,MAAO,CAACa,MAAoB,SAAblC,EAAMM,KAAc,QAAQ,SACvEL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,cAAM4B,EAAKiB,MAAM,KAAKC,OAAO,SAACC,GAC1B,OAAwB,IAAjBA,EAAQP,SAAaA,OADhC,cACmDZ,EAAKY,OADxD,eAGA1C,EAAAC,EAAAC,cAAA,cAAM,KAAM4B,EAAKiB,MAAM,KAAKC,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQP,SAAaA,OAA3E,gBACA1C,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,aAAK4B,EAAKY,OAAO,EAAGZ,EAAK,qBAAzB,OC/BOoB,MAff,SAAenD,GAMb,OACAC,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAACC,OAAO,SAChBtB,EAAMoD,OAASnD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBL,EAAMoD,MAAM3C,KAA7B,gCAAiE4C,KAAK,SACpGpD,EAAAC,EAAAC,cAAA,cARgB,SAACmD,GACd,IAAMC,EAAOD,EAAKP,cAClB,OAAOQ,EAAMC,OAAO,GAAGX,cAAcU,EAAME,MAAM,GAM3CC,CAAW1D,EAAMoD,MAAM3C,OADhB,IACiCT,EAAMoD,MAAMO,OCTnD,SAASC,EAAM5D,GAM9B,IAAI6D,EAAQ,CACR3B,MAAmB,SAAblC,EAAMM,KAAc,QAAQ,UAClCmC,gBAA6B,SAAbzC,EAAMM,KAAc,UAAU,SAMhD,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAWiB,MAAO,CAACa,MAAmB,SAAblC,EAAMM,KAAc,QAAQ,YAAnE,YACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYW,GAAG,oBAC5Bd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBW,GAAG,cACpCd,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAkBiB,MAAOwC,EAASpD,KAAK,SAASC,iBAAe,WAAWC,iBAAe,eAAeE,gBAAc,OAAOD,gBAAc,eACzJX,EAAAC,EAAAC,cAAA,sCAGJF,EAAAC,EAAAC,cAAA,OAAKY,GAAG,cAAcX,UAAU,mCAAmC0D,kBAAgB,aAAaC,iBAAe,qBAC/G9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBiB,MAAOwC,GAAvC,6ZAC2Z5D,EAAAC,EAAAC,cAAA,+BAD3Z,kDAKJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBW,GAAG,cACpCd,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA4BiB,MAAOwC,EAASpD,KAAK,SAASC,iBAAe,WAAWC,iBAAe,eAAeE,gBAAc,QAAQD,gBAAc,eACxKX,EAAAC,EAAAC,cAAA,gCAGAF,EAAAC,EAAAC,cAAA,OAAKY,GAAG,cAAcX,UAAU,8BAA8B0D,kBAAgB,aAAaC,iBAAe,qBAC1G9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAgBiB,MAAOwC,GAAtC,+ZAC4Z5D,EAAAC,EAAAC,cAAA,+BAD5Z,kDAKAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBW,GAAG,gBACpCd,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA4BiB,MAAOwC,EAASpD,KAAK,SAASC,iBAAe,WAAWC,iBAAe,iBAAiBE,gBAAc,QAAQD,gBAAc,iBACzKX,EAAAC,EAAAC,cAAA,uCAGDF,EAAAC,EAAAC,cAAA,OAAKY,GAAG,gBAAgBX,UAAU,8BAA8B0D,kBAAgB,eAAeC,iBAAe,qBAC9G9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAgBiB,MAAOwC,GAAtC,8ZAC2Z5D,EAAAC,EAAAC,cAAA,+BAD3Z,+DC+BD6D,MApEf,WAAe,IAAAtC,EACQC,mBAAS,SADjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACRpB,EADQsB,EAAA,GACFqC,EADErC,EAAA,GAAAsC,EAEUvC,mBAAS,MAFnBwC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAqC,EAAA,GAERd,EAFQe,EAAA,GAEFC,EAFED,EAAA,GAGTrB,EAAU,SAACuB,EAAQ5D,GACvB2D,EAAS,CACPT,IAAIU,EACJ5D,KAAKA,IAEN6D,WAAW,WACTF,EAAS,OACT,OAmCH,OACEnE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+B,SAAA,KACHhC,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACAf,EAAAC,EAAAC,cAACJ,EAAD,CAAQS,MAAM,YAAWF,KAAMA,EAAMc,WAzBrB,SAACmD,GAVhBC,SAASC,KAAKC,UAAUC,OAAO,YAC/BH,SAASC,KAAKC,UAAUC,OAAO,aAC/BH,SAASC,KAAKC,UAAUC,OAAO,cAC/BH,SAASC,KAAKC,UAAUC,OAAO,cAC/BH,SAASC,KAAKC,UAAUC,OAAO,WAC/BH,SAASC,KAAKC,UAAUC,OAAO,gBAC/BH,SAASC,KAAKC,UAAUC,OAAO,YAC/BH,SAASC,KAAKC,UAAUC,OAAO,WAK/BC,QAAQC,IAAIN,GACF,UAAPjE,GACD2D,EAAQ,QACRO,SAASC,KAAKpD,MAAMoB,gBAAgB,UACpC+B,SAASC,KAAKC,UAAUI,IAAI,MAAMP,GAClCzB,EAAU,6BAA6B,aASvCmB,EAAQ,SACRO,SAASC,KAAKpD,MAAMoB,gBAAgB,QACpCK,EAAU,8BAA8B,eAQ3C7C,EAAAC,EAAAC,cAAC4E,EAAD,CAAO3B,MAAOA,IACdnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,KACS/E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAAQhC,QAAUjD,EAAAC,EAAAC,cAACyD,EAAD,CAAOtD,KAAMA,MAGjDL,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAGhC,QACpBjD,EAAAC,EAAAC,cAACsB,EAAD,CAAUqB,UAAWA,EAAWX,QAAQ,2EAA2E7B,KAAMA,WC1DrH6E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWzB,SAAS0B,eAAe,SACpDC,OACHlG,EAAAC,EAAAC,cAACF,EAAAC,EAAMkG,WAAP,KACEnG,EAAAC,EAAAC,cAACkG,EAAD,QAOJlB","file":"static/js/main.cbe88268.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n            {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\"to=\"/about\">About</Link>\n            {/* <a className=\"nav-link\"href=\"#\">About</a> */}\n          </li>\n        </ul>\n        <div className=\"d-flex\">\n          <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}}style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\n          <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}}style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\n          <div className=\"bg-secondary rounded mx-2\" onClick={()=>{props.toggleMode('secondary')}}style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\n          <div className=\"bg-info rounded mx-2\" onClick={()=>{props.toggleMode('info')}}style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\n          <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}}style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\n          <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}}style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\n          <div className=\"bg-light rounded mx-2\" onClick={()=>{props.toggleMode('light')}}style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\n          <div className=\"bg-dark rounded mx-2\" onClick={()=>{props.toggleMode('dark')}}style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\n        </div>\n      </div>\n    </div>\n  </nav>\n  )\n}\nNavbar.propTypes={\n    title:PropTypes.string.isRequired,\n    abouttext:PropTypes.string\n}\n","import React,{useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick=()=>{\n        // console.log(\"uppercase was clicked\"+ text);\n        let newText=text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"converted to uppercase\",\"success\");\n    }\n    const handletoclear=()=>{\n        // console.log(\"uppercase was clicked\"+ text);\n        let newText=(' ');\n        setText(newText);\n        props.showAlert(\"text cleared\",\"success\");\n    }\n    const handleLoClick=()=>{\n        // console.log(\"uppercase was clicked\"+ text);\n        let newText=text.toLowerCase();\n        setText(newText);\n        props.showAlert(\"converted to lowercase\",\"success\");\n    }\n    const handleOnChange=(event)=>{\n        // console.log(\"on change\");\n        setText(event.target.value);\n    }\n\n    const [text, setText] = useState('');\n    // text=\"new text\"; wrong way to change the state\n    //   setText(\"new text\");// wrong way to change the state\n  return (\n      <>\n    <div className=\"container\"style={{color:props.mode==='dark'?'grey':'#042743' }}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n             {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\n             <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange}rows=\"8\"style={{backgroundColor:props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'? 'white':'#042743' }}></textarea>\n        </div>\n        <button  disabled={text.length===0} className=\"btn btn-dark mx-1 my-1\" onClick={handleUpClick}>convert to uppercase</button>\n        <button disabled={text.length===0} className=\"btn btn-dark mx-2 my-1\" onClick={handleLoClick}>convert to lowercase</button>\n        <button disabled={text.length===0} className=\"btn btn-dark mx-2 my-1\" onClick={handletoclear}>clear text</button>\n    </div>\n    <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'dark' }}>\n        <h2>your text summary</h2>\n        <p>  {text.split(\" \").filter((element)=>{\n            return element.length!==0}).length} words and {text.length} characters</p>\n\n        <p>  {0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minute read</p>\n        <h2>  preview</h2>\n        <p> {text.length>0 ?text:\"nothing to preview\"} </p>\n    </div>\n    </>\n  )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize=(word)=>{\n        const lower= word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\n\n    }\n  return ( \n  <div style={{height:'50px'}}>\n     {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n     <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n    </div>}\n </div>\n  )\n}\n\nexport default Alert","import React,{useState} from 'react'\n\nexport default function About(props) {\n//    const [myStyle, setMyStyle] = useState({\n//         color:'black',\n//         backgroundColor:'white',\n        \n//   })\nlet myStyle={\n    color:props.mode==='dark'?'white':'#042743',\n    backgroundColor:props.mode==='dark'?'#042743':'white',\n    \n\n   \n}\n//   const [btntext, setBtnText] = useState(\"enable dark mode\")\n  return (\n    <div className=\"container\" >\n        <h1 className=\"my-2 mx-2\"style={{color:props.mode==='dark'?'white':'#042743'}}>about Us</h1>\n          <div className=\"accordion\" id=\"accordionExample\">\n            <div className=\"accordion-item\">\n                <h2 className=\"accordion-header\" id=\"headingOne\">\n                <button className=\"accordion-button\"style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                    <strong> Analize your text</strong> \n                </button>\n                </h2>\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                <div className=\"accordion-body\" style={myStyle}>\n                 This is the first item's accordion body. It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                </div>\n                </div>\n            </div>\n            <div className=\"accordion-item\">\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\n                <button className=\"accordion-button collapsed\"style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                <strong> Free to use</strong>\n                </button>\n                </h2>\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                <div className=\"accordion-body\"style={myStyle} >\n                This is the second item's accordion body. It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                </div>\n                </div>\n            </div>\n                <div className=\"accordion-item\">\n                <h2 className=\"accordion-header\" id=\"headingThree\">\n                <button className=\"accordion-button collapsed\"style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                 <strong> Browser compatible</strong>\n                </button>\n                </h2>\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                <div className=\"accordion-body\"style={myStyle}>\n                This is the third item's accordion body. It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                </div>\n            </div>\n            </div>\n        </div>\n          \n    </div>\n  )\n}\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport React,{useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\nconst [mode, setMode] =useState('light');\nconst [alert,setAlert] = useState(null);\nconst showAlert=(message,type)=>{\n  setAlert({\n    msg:message,\n    type:type\n  })\n   setTimeout(()=>{\n     setAlert(null);\n   },1500);\n}\nconst removeBodtClass=()=>{\n  document.body.classList.remove('bg-light');\n  document.body.classList.remove('bg-danger');\n  document.body.classList.remove('bg-success');\n  document.body.classList.remove('bg-warning');\n  document.body.classList.remove('bg-info');\n  document.body.classList.remove('bg-secondary');\n  document.body.classList.remove('bg-light');\n  document.body.classList.remove('bg-dark');\n\n}\nconst toggleMode=(cls)=>{\n  removeBodtClass();\n  console.log(cls);\n  if(mode==='light'){\n    setMode(\"dark\");\n    document.body.style.backgroundColor='#042743';\n    document.body.classList.add('bg-'+cls);\n    showAlert(\"dark mode has been enabled\",\"success\");\n    // document.title='textutil-Dark mode'; \n    // setInterval(()=>{\n    //   document.title='textutil is amazing';\n    // },2000)\n    // setInterval(()=>{\n    //   document.title='install textutil now';\n    // },2000)\n  }else{\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"light mode has been enabled\",\"success\");\n    // document.title='textutil-light mode';\n  }\n}\n  return (\n    <>\n <Router>\n <Navbar title=\"Textutils\"mode={mode} toggleMode={toggleMode}/>\n <Alert alert={alert} />\n <div className=\"container my-3\">\n <Routes>\n          <Route exact path=\"/about\"element={ <About mode={mode} />}>\n           \n          </Route>\n          <Route exact path=\"/\"element=\n          {<TextForm showAlert={showAlert} heading=\" try textutils-word counter ,character counter,uppercase to lowercase  :\" mode={mode}/>}>\n          </Route>\n </Routes>\n  \n  </div>\n  </Router>\n \n\n</>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}